{
  "pipelineSpec": {
    "components": {
      "comp-automlforecastingtrainingjob-run-with-experiments": {
        "executorLabel": "exec-automlforecastingtrainingjob-run-with-experiments",
        "inputDefinitions": {
          "artifacts": {
            "dataset": {
              "artifactType": {
                "schemaTitle": "google.VertexDataset",
                "schemaVersion": "0.0.1"
              }
            }
          },
          "parameters": {
            "available_at_forecast_columns": {
              "type": "STRING"
            },
            "budget_milli_node_hours": {
              "type": "INT"
            },
            "context_window": {
              "type": "INT"
            },
            "forecast_horizon": {
              "type": "INT"
            },
            "location": {
              "type": "STRING"
            },
            "project": {
              "type": "STRING"
            },
            "time_series_attribute_columns": {
              "type": "STRING"
            },
            "unavailable_at_forecast_columns": {
              "type": "STRING"
            }
          }
        },
        "outputDefinitions": {
          "artifacts": {
            "model": {
              "artifactType": {
                "schemaTitle": "google.VertexModel",
                "schemaVersion": "0.0.1"
              }
            }
          }
        }
      },
      "comp-create-prediction-dataset": {
        "executorLabel": "exec-create-prediction-dataset",
        "inputDefinitions": {
          "parameters": {
            "dataset": {
              "type": "STRING"
            },
            "override": {
              "type": "STRING"
            },
            "project": {
              "type": "STRING"
            },
            "source_table_uri": {
              "type": "STRING"
            }
          }
        },
        "outputDefinitions": {
          "parameters": {
            "training_data_table_uri": {
              "type": "STRING"
            }
          }
        }
      },
      "comp-time-series-dataset-create": {
        "executorLabel": "exec-time-series-dataset-create",
        "inputDefinitions": {
          "parameters": {
            "display_name": {
              "type": "STRING"
            },
            "labels": {
              "type": "STRING"
            },
            "location": {
              "type": "STRING"
            },
            "project": {
              "type": "STRING"
            }
          }
        },
        "outputDefinitions": {
          "artifacts": {
            "dataset": {
              "artifactType": {
                "schemaTitle": "google.VertexDataset",
                "schemaVersion": "0.0.1"
              }
            }
          }
        }
      }
    },
    "deploymentSpec": {
      "executors": {
        "exec-automlforecastingtrainingjob-run-with-experiments": {
          "container": {
            "args": [
              "--init.display_name",
              "train-poc",
              "--init.optimization_objective",
              "minimize-rmse",
              "--method.model_display_name",
              "poc",
              "--method.export_evaluated_data_items",
              "True",
              "--method.export_evaluated_data_items_override_destination",
              "True",
              "--method.target_column",
              "category_rank",
              "--method.time_column",
              "date",
              "--method.time_series_identifier_column",
              "series_id",
              "--method.data_granularity_unit",
              "week",
              "--method.data_granularity_count",
              "1",
              "--method.predefined_split_column_name",
              "split_col",
              "--executor_input",
              "{{$}}",
              "--resource_name_output_artifact_uri",
              "{{$.outputs.artifacts['model'].uri}}",
              "--method.dataset",
              "{{$.inputs.artifacts['dataset'].metadata['resourceName']}}",
              "--method.context_window",
              "{{$.inputs.parameters['context_window']}}",
              "--method.forecast_horizon",
              "{{$.inputs.parameters['forecast_horizon']}}",
              "--method.budget_milli_node_hours",
              "{{$.inputs.parameters['budget_milli_node_hours']}}",
              "--init.project",
              "{{$.inputs.parameters['project']}}",
              "--init.location",
              "{{$.inputs.parameters['location']}}",
              "--method.time_series_attribute_columns",
              "{{$.inputs.parameters['time_series_attribute_columns']}}",
              "--method.unavailable_at_forecast_columns",
              "{{$.inputs.parameters['unavailable_at_forecast_columns']}}",
              "--method.available_at_forecast_columns",
              "{{$.inputs.parameters['available_at_forecast_columns']}}"
            ],
            "command": [
              "python3",
              "-m",
              "google_cloud_pipeline_components.container.aiplatform.remote_runner",
              "--cls_name",
              "AutoMLForecastingTrainingJob",
              "--method_name",
              "_run_with_experiments"
            ],
            "image": "gcr.io/ml-pipeline/google-cloud-pipeline-components:latest"
          }
        },
        "exec-create-prediction-dataset": {
          "container": {
            "args": [
              "--executor_input",
              "{{$}}",
              "--function_to_execute",
              "create_prediction_dataset"
            ],
            "command": [
              "sh",
              "-c",
              "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'google-cloud-bigquery==2.18.0' 'kfp==1.8.11' && \"$0\" \"$@\"\n",
              "sh",
              "-ec",
              "program_path=$(mktemp -d)\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\npython3 -m kfp.v2.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
              "\nimport kfp\nfrom kfp.v2 import dsl\nfrom kfp.v2.dsl import *\nfrom typing import *\n\ndef create_prediction_dataset(\n  project: str,\n  dataset: str,\n  source_table_uri: str,\n  override: str = 'False',\n) -> NamedTuple('Outputs', [('training_data_table_uri', str)]):\n  from google.cloud import bigquery\n\n  override = bool(override)\n  bq_client = bigquery.Client(project=project)\n  combined_preds_forecast_table_name = f'{project}.{dataset}.y5y6_forecast_volume'\n  (\n    bq_client.query(\n      f\"\"\"\n      CREATE {'OR REPLACE TABLE' if override else 'TABLE IF NOT EXISTS'} \n        `{combined_preds_forecast_table_name}`\n      AS (\n     with raw_data as (\n     SELECT *, concat(category_id, geo_id) as series_id,\n     case when date between '2020-02-01' and  '2020-12-31' then 'TRAIN'\n      when date between '2021-01-01' and '2021-05-31' then 'VALIDATE'\n     else 'TEST' end as split_col\n     from `{project}.{dataset}.{source_table_uri}`\n     WHERE date between '2020-02-01' and '2021-12-31'\n )\n SELECT * EXCEPT (volume, score, geo_type) from raw_data\n)\n\n      )\n          \"\"\"\n    )\n    .result()\n  )\n\n  return (\n    f'bq://{combined_preds_forecast_table_name}',\n  )\n\n"
            ],
            "image": "python:3.9"
          }
        },
        "exec-time-series-dataset-create": {
          "container": {
            "args": [
              "--method.project",
              "{{$.inputs.parameters['project']}}",
              "--method.location",
              "{{$.inputs.parameters['location']}}",
              "--method.display_name",
              "{{$.inputs.parameters['display_name']}}",
              "--method.labels",
              "{{$.inputs.parameters['labels']}}",
              "--executor_input",
              "{{$}}",
              "--resource_name_output_artifact_uri",
              "{{$.outputs.artifacts['dataset'].uri}}"
            ],
            "command": [
              "python3",
              "-m",
              "google_cloud_pipeline_components.container.aiplatform.remote_runner",
              "--cls_name",
              "TimeSeriesDataset",
              "--method_name",
              "create"
            ],
            "image": "gcr.io/ml-pipeline/google-cloud-pipeline-components:latest"
          }
        }
      }
    },
    "pipelineInfo": {
      "name": "poc-train-m5-hier"
    },
    "root": {
      "dag": {
        "tasks": {
          "automlforecastingtrainingjob-run-with-experiments": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-automlforecastingtrainingjob-run-with-experiments"
            },
            "dependentTasks": [
              "time-series-dataset-create"
            ],
            "inputs": {
              "artifacts": {
                "dataset": {
                  "taskOutputArtifact": {
                    "outputArtifactKey": "dataset",
                    "producerTask": "time-series-dataset-create"
                  }
                }
              },
              "parameters": {
                "available_at_forecast_columns": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "[\"date\", \"term\"]"
                    }
                  }
                },
                "budget_milli_node_hours": {
                  "componentInputParameter": "budget_milli_node_hours"
                },
                "context_window": {
                  "componentInputParameter": "context_window"
                },
                "forecast_horizon": {
                  "componentInputParameter": "forecast_horizon"
                },
                "location": {
                  "componentInputParameter": "location"
                },
                "project": {
                  "componentInputParameter": "vertex_project"
                },
                "time_series_attribute_columns": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "[\"geo_name\", \"geo_id\", \"category_id\"]"
                    }
                  }
                },
                "unavailable_at_forecast_columns": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "[\"category_rank\"]"
                    }
                  }
                }
              }
            },
            "taskInfo": {
              "name": "automlforecastingtrainingjob-run-with-experiments"
            }
          },
          "create-prediction-dataset": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-create-prediction-dataset"
            },
            "inputs": {
              "parameters": {
                "dataset": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "trendspotting"
                    }
                  }
                },
                "override": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "False"
                    }
                  }
                },
                "project": {
                  "componentInputParameter": "vertex_project"
                },
                "source_table_uri": {
                  "componentInputParameter": "data_source_dataset"
                }
              }
            },
            "taskInfo": {
              "name": "create-prediction-dataset"
            }
          },
          "time-series-dataset-create": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-time-series-dataset-create"
            },
            "dependentTasks": [
              "create-prediction-dataset"
            ],
            "inputs": {
              "parameters": {
                "display_name": {
                  "taskOutputParameter": {
                    "outputParameterKey": "training_data_table_uri",
                    "producerTask": "create-prediction-dataset"
                  }
                },
                "labels": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "{}"
                    }
                  }
                },
                "location": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "us-central1"
                    }
                  }
                },
                "project": {
                  "componentInputParameter": "ds_display_name"
                }
              }
            },
            "taskInfo": {
              "name": "time-series-dataset-create"
            }
          }
        }
      },
      "inputDefinitions": {
        "parameters": {
          "budget_milli_node_hours": {
            "type": "INT"
          },
          "context_window": {
            "type": "INT"
          },
          "data_source_dataset": {
            "type": "STRING"
          },
          "ds_display_name": {
            "type": "STRING"
          },
          "forecast_horizon": {
            "type": "INT"
          },
          "location": {
            "type": "STRING"
          },
          "override": {
            "type": "STRING"
          },
          "version": {
            "type": "STRING"
          },
          "vertex_project": {
            "type": "STRING"
          }
        }
      }
    },
    "schemaVersion": "2.0.0",
    "sdkVersion": "kfp-1.8.11"
  },
  "runtimeConfig": {
    "parameters": {
      "budget_milli_node_hours": {
        "intValue": "16000"
      }
    }
  }
}